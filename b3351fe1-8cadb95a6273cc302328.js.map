{"version":3,"sources":["webpack://alloy-sandbox/./src/components/GlobalHeader/index.js"],"names":["getSelectedTabIndex","location","pages","pathWithRootFix","rootFix","pathname","pagesWithRootFix","rootFixPages","selectedIndex","indexOf","findSelectedTopPage","getAvatar","userId","fetch","req","json","res","user","images","DEFAULT_AVATAR","console","warn","GlobalHeader","ims","isLoadingIms","home","versions","docs","toggleSideNav","hasSideNav","useState","selectedTabIndex","setSelectedTabIndex","tabsRef","useRef","tabsContainerRef","selectedTabIndicatorRef","isAnimated","setIsAnimated","versionPopoverRef","profilePopoverRef","openVersion","setOpenVersion","openProfile","setOpenProfile","openMenuIndex","setOpenMenuIndex","profile","setProfile","avatar","setAvatar","isLoadingProfile","setIsLoadingProfile","versionPopoverId","nextId","profilePopoverId","hasHome","hidden","positionSelectedTabIndicator","index","selectedTab","tabRef","positionIndicator","useEffect","animateIndicator","isSignedInUser","getProfile","current","getBoundingClientRect","top","left","style","position","setTimeout","menuRef","forEach","page","onClick","event","contains","target","some","document","addEventListener","removeEventListener","onScroll","passive","role","css","MOBILE_SCREEN_WIDTH","aria-label","DESKTOP_SCREEN_WIDTH","isQuiet","TripleGripper","href","Adobe","className","variant","DEFAULT_HOME","getExternalLinkProps","title","ref","onFontsReady","elementType","GatsbyLink","to","map","i","isSelectedTab","menuPopoverId","setTabRef","element","Fragment","key","withPrefix","selected","aria-controls","stopImmediatePropagation","ChevronDown","id","menu","description","isOpen","k","length","open","find","version","isSelected","isHighlighted","A","process","GATSBY_IMS_SRC","GATSBY_IMS_CONFIG","size","signIn","alt","src","displayName","signOut"],"mappings":"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","file":"b3351fe1-8cadb95a6273cc302328.js","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport React, { Fragment, useRef, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport nextId from \"react-id-generator\";\nimport { withPrefix } from \"gatsby\";\nimport { GatsbyLink } from \"../GatsbyLink\";\nimport {\n  findSelectedTopPage,\n  rootFix,\n  rootFixPages,\n  getExternalLinkProps,\n  DESKTOP_SCREEN_WIDTH,\n  MOBILE_SCREEN_WIDTH,\n  DEFAULT_HOME\n} from \"../../utils\";\nimport { css } from \"@emotion/react\";\nimport { AnchorButton } from \"../AnchorButton\";\nimport { Button } from \"../Button\";\nimport { ProgressCircle } from \"../ProgressCircle\";\nimport { Adobe, ChevronDown, TripleGripper } from \"../Icons\";\nimport { ActionButton, Text as ActionButtonLabel } from \"../ActionButton\";\nimport { PickerButton } from \"../Picker\";\nimport { Menu, Item as MenuItem } from \"../Menu\";\nimport { Popover } from \"../Popover\";\nimport { Image } from \"../Image\";\nimport { Link } from \"../Link\";\nimport {\n  Tabs,\n  Item as TabsItem,\n  Label as TabsItemLabel,\n  TabsIndicator,\n  positionIndicator,\n  animateIndicator\n} from \"../Tabs\";\nimport \"@spectrum-css/typography\";\nimport \"@spectrum-css/assetlist\";\nimport { Divider } from \"../Divider\";\nimport DEFAULT_AVATAR from \"./avatar.svg\";\n\nconst getSelectedTabIndex = (location, pages) => {\n  const pathWithRootFix = rootFix(location.pathname);\n  const pagesWithRootFix = rootFixPages(pages);\n\n  let selectedIndex = pagesWithRootFix.indexOf(\n    findSelectedTopPage(pathWithRootFix, pagesWithRootFix)\n  );\n\n  // Assume first item is selected\n  if (selectedIndex === -1) {\n    selectedIndex = 0;\n  }\n\n  return selectedIndex;\n};\n\nconst getAvatar = async userId => {\n  try {\n    const req = await fetch(\n      `https://cc-api-behance.adobe.io/v2/users/${userId}?api_key=SUSI2`\n    );\n    const res = await req.json();\n    return res?.user?.images?.[\"138\"] ?? DEFAULT_AVATAR;\n  } catch (e) {\n    console.warn(e);\n    return DEFAULT_AVATAR;\n  }\n};\n\nconst GlobalHeader = ({\n  ims,\n  isLoadingIms,\n  home,\n  versions,\n  pages,\n  docs,\n  location,\n  toggleSideNav,\n  hasSideNav\n}) => {\n  const [selectedTabIndex, setSelectedTabIndex] = useState(\n    getSelectedTabIndex(location, pages)\n  );\n  const tabsRef = useRef(null);\n  const tabsContainerRef = useRef(null);\n  const selectedTabIndicatorRef = useRef(null);\n  // Don't animate the tab indicator by default\n  const [isAnimated, setIsAnimated] = useState(false);\n  const versionPopoverRef = useRef(null);\n  const profilePopoverRef = useRef(null);\n  const [openVersion, setOpenVersion] = useState(false);\n  const [openProfile, setOpenProfile] = useState(false);\n  const [openMenuIndex, setOpenMenuIndex] = useState(-1);\n  const [profile, setProfile] = useState(null);\n  const [avatar, setAvatar] = useState(DEFAULT_AVATAR);\n  const [isLoadingProfile, setIsLoadingProfile] = useState(true);\n\n  const POPOVER_ANIMATION_DELAY = 200;\n  const versionPopoverId = nextId();\n  const profilePopoverId = nextId();\n  const hasHome = home?.hidden !== true;\n\n  const positionSelectedTabIndicator = index => {\n    const selectedTab = pages[index].tabRef;\n\n    if (selectedTab) {\n      positionIndicator(selectedTabIndicatorRef, selectedTab);\n    }\n  };\n\n  useEffect(() => {\n    const index = getSelectedTabIndex(location, pages);\n    setSelectedTabIndex(index);\n\n    animateIndicator(selectedTabIndicatorRef, isAnimated);\n    positionSelectedTabIndicator(index);\n  }, [location.pathname]);\n\n  useEffect(() => {\n    (async () => {\n      if (ims && ims.isSignedInUser()) {\n        const profile = await ims.getProfile();\n        setProfile(profile);\n        setAvatar(await getAvatar(profile.userId));\n        setIsLoadingProfile(false);\n      } else if (!isLoadingIms) {\n        setIsLoadingProfile(false);\n      }\n    })();\n  }, [ims]);\n\n  useEffect(() => {\n    if (versionPopoverRef.current) {\n      if (openVersion) {\n        const { top, left } = versionPopoverRef.current.getBoundingClientRect();\n\n        versionPopoverRef.current.style.left = `calc(${left}px + var(--spectrum-global-dimension-size-160))`;\n        versionPopoverRef.current.style.top = `${top}px`;\n        versionPopoverRef.current.style.position = \"fixed\";\n      } else {\n        // Wait for animation to finish\n        setTimeout(() => {\n          versionPopoverRef.current.style = \"\";\n        }, POPOVER_ANIMATION_DELAY);\n      }\n    }\n  }, [openVersion]);\n\n  useEffect(() => {\n    if (openMenuIndex !== -1) {\n      const menuRef = pages[openMenuIndex].menuRef;\n\n      const { top, left } = menuRef.current.getBoundingClientRect();\n\n      menuRef.current.style.left = `${left}px`;\n      menuRef.current.style.top = `${top}px`;\n      menuRef.current.style.position = \"fixed\";\n    } else {\n      pages.forEach(page => {\n        const menuRef = page.menuRef;\n        if (menuRef) {\n          // Wait for animation to finish\n          setTimeout(() => {\n            menuRef.current.style = \"\";\n          }, POPOVER_ANIMATION_DELAY);\n        }\n      });\n    }\n  }, [openMenuIndex]);\n\n  useEffect(() => {\n    // Clicking outside of menu should close menu\n    const onClick = event => {\n      if (\n        versionPopoverRef.current &&\n        !versionPopoverRef.current.contains(event.target)\n      ) {\n        setOpenVersion(false);\n      }\n\n      if (\n        profilePopoverRef?.current &&\n        !profilePopoverRef.current.contains(event.target)\n      ) {\n        setOpenProfile(false);\n      }\n\n      pages.some(page => {\n        if (\n          page?.menuRef?.current &&\n          !page.menuRef.current.contains(event.target)\n        ) {\n          setOpenMenuIndex(-1);\n        }\n      });\n    };\n\n    document.addEventListener(\"click\", onClick);\n\n    return () => document.removeEventListener(\"click\", onClick);\n  }, []);\n\n  useEffect(() => {\n    const onScroll = () => {\n      setOpenVersion(false);\n      setOpenMenuIndex(-1);\n    };\n\n    tabsContainerRef.current.addEventListener(\"scroll\", onScroll, {\n      passive: true\n    });\n\n    return () =>\n      tabsContainerRef.current.removeEventListener(\"scroll\", onScroll);\n  }, []);\n\n  return (\n    <header\n      role=\"banner\"\n      css={css`\n        height: 100%;\n        border-bottom: var(--spectrum-global-dimension-size-10) solid\n          var(--spectrum-global-color-gray-200);\n        box-sizing: border-box;\n\n        @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n          border-bottom: none;\n        }\n      `}\n    >\n      <nav\n        css={css`\n          height: 100%;\n        `}\n        role=\"navigation\"\n        aria-label=\"Global\"\n      >\n        <div\n          css={css`\n            display: grid;\n            grid-template-areas: \"title navigation optional\";\n            grid-template-columns: minmax(auto, min-content) auto minmax(\n                auto,\n                min-content\n              );\n            align-items: center;\n            margin-left: var(--spectrum-global-dimension-size-400);\n            margin-right: var(--spectrum-global-dimension-size-200);\n            height: 100%;\n\n            @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n              grid-template-columns: minmax(auto, min-content) auto 0 0;\n              margin-right: 0;\n              margin-left: 0;\n              height: calc(100% + var(--spectrum-global-dimension-size-10));\n              overflow: hidden;\n            }\n          `}\n        >\n          <div\n            css={css`\n              height: 100%;\n              grid-area: title;\n\n              @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                padding-left: ${!hasSideNav\n                  ? \"var(--spectrum-global-dimension-size-200)\"\n                  : \"0\"};\n              }\n            `}\n          >\n            <div\n              css={css`\n                display: flex;\n                height: 100%;\n                align-items: center;\n              `}\n            >\n              <div\n                css={css`\n                  display: flex;\n                  align-items: center;\n                `}\n              >\n                <div\n                  css={css`\n                    display: none;\n\n                    @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                      display: ${hasSideNav ? \"block\" : \"none\"};\n                      margin: 0 var(--spectrum-global-dimension-size-100);\n                    }\n                  `}\n                >\n                  <ActionButton\n                    isQuiet\n                    onClick={() => {\n                      toggleSideNav && toggleSideNav();\n                    }}\n                  >\n                    <TripleGripper />\n                  </ActionButton>\n                </div>\n                <a\n                  href=\"/\"\n                  css={css`\n                    text-decoration: none;\n                  `}\n                >\n                  <div\n                    css={css`\n                      display: flex;\n                      align-items: center;\n                    `}\n                  >\n                    <Adobe\n                      css={css`\n                        width: calc(\n                          var(--spectrum-global-dimension-size-250) +\n                            var(--spectrum-global-dimension-size-25)\n                        );\n                        height: var(--spectrum-global-dimension-size-225);\n                        display: block;\n                        margin-right: var(--spectrum-global-dimension-size-100);\n                      `}\n                    />\n                    <strong\n                      className=\"spectrum-Heading spectrum-Heading--sizeXXS\"\n                      css={css`\n                        color: black;\n                        font-size: var(--spectrum-global-dimension-size-200);\n                        font-weight: 700;\n                        white-space: nowrap;\n                      `}\n                    >\n                      AEP Web SDK\n                    </strong>\n                  </div>\n                </a>\n              </div>\n\n              {hasHome && (\n                <div\n                  css={css`\n                    margin-left: var(--spectrum-global-dimension-size-300);\n                    height: calc(\n                      100% + var(--spectrum-global-dimension-size-10)\n                    );\n                    border-left: var(--spectrum-global-dimension-size-10) solid\n                      var(--spectrum-global-color-gray-200);\n                    border-right: var(--spectrum-global-dimension-size-10) solid\n                      var(--spectrum-global-color-gray-200);\n\n                    @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                      display: none;\n                    }\n                  `}\n                >\n                  <Link isQuiet variant=\"secondary\">\n                    <a\n                      css={css`\n                        display: flex;\n                        height: calc(\n                          100% - var(--spectrum-global-dimension-size-10)\n                        );\n                        align-items: center;\n                        justify-content: center;\n                        box-sizing: border-box;\n                        padding: 0 var(--spectrum-global-dimension-size-300);\n                        white-space: nowrap;\n                        color: var(--spectrum-global-color-gray-700);\n                        transition: background-color\n                            var(--spectrum-global-animation-duration-100)\n                            ease-out,\n                          color var(--spectrum-global-animation-duration-100)\n                            ease-out;\n\n                        &:hover {\n                          background-color: var(\n                            --spectrum-global-color-gray-75\n                          );\n                          color: var(--spectrum-global-color-gray-900);\n                          text-decoration: none;\n                        }\n                      `}\n                      href={home?.href || DEFAULT_HOME.href}\n                      {...getExternalLinkProps(home?.href || DEFAULT_HOME.href)}\n                    >\n                      {home?.title || DEFAULT_HOME.title}\n                    </a>\n                  </Link>\n                </div>\n              )}\n            </div>\n          </div>\n          <div\n            ref={tabsContainerRef}\n            css={css`\n              grid-area: navigation;\n              margin-left: ${hasHome\n                ? \"var(--spectrum-global-dimension-size-200)\"\n                : \"var(--spectrum-global-dimension-size-300)\"};\n\n              @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                overflow-x: auto;\n                overflow-x: overlay;\n                overflow-y: hidden;\n                -ms-overflow-style: none;\n                scrollbar-width: none;\n\n                &::-webkit-scrollbar {\n                  display: none;\n                }\n\n                margin-right: var(--spectrum-global-dimension-size-2000);\n              }\n\n              @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                position: fixed;\n                top: calc(\n                  var(--spectrum-global-dimension-size-600) -\n                    var(--spectrum-global-dimension-size-10)\n                );\n                height: var(--spectrum-global-dimension-size-600);\n                left: 0;\n                right: 0;\n                margin-left: 0;\n                margin-right: 0;\n                background-color: var(--spectrum-global-color-gray-50);\n                border-bottom: var(--spectrum-global-dimension-size-10) solid\n                  var(--spectrum-global-color-gray-200);\n              }\n            `}\n          >\n            <div\n              css={css`\n                display: none;\n\n                @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                  display: block;\n                  pointer-events: none;\n                  position: fixed;\n                  top: var(--spectrum-global-dimension-size-600);\n                  height: calc(\n                    var(--spectrum-global-dimension-size-600) -\n                      var(--spectrum-global-dimension-size-25)\n                  );\n                  right: 0;\n                  width: var(--spectrum-global-dimension-size-300);\n                  background: -webkit-linear-gradient(\n                    0deg,\n                    rgba(255, 255, 255, 0),\n                    white\n                  );\n                  z-index: 1;\n                }\n              `}\n            />\n\n            <Tabs\n              css={css`\n                @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                  padding-bottom: var(--spectrum-global-dimension-size-400);\n                  margin-top: var(--spectrum-global-dimension-size-400);\n                }\n\n                @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                  padding-bottom: 0;\n                  margin-top: 0;\n                }\n              `}\n              ref={tabsRef}\n              onFontsReady={() => {\n                positionSelectedTabIndicator(selectedTabIndex);\n                setIsAnimated(true);\n              }}\n            >\n              {hasHome && (\n                <div\n                  css={css`\n                    display: none;\n                    margin-right: var(--spectrum-global-dimension-size-300);\n\n                    @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                      display: block;\n                    }\n                  `}\n                >\n                  <TabsItem\n                    elementType={GatsbyLink}\n                    to={home?.href || DEFAULT_HOME.href}\n                    {...getExternalLinkProps(home?.href || DEFAULT_HOME.href)}\n                  >\n                    <TabsItemLabel>\n                      {home?.title || DEFAULT_HOME.title}\n                    </TabsItemLabel>\n                  </TabsItem>\n                </div>\n              )}\n              {pages.map((page, i) => {\n                const isSelectedTab = selectedTabIndex === i;\n                const menuPopoverId = nextId();\n\n                const setTabRef = element => {\n                  page.tabRef = { current: element };\n                };\n\n                const setTabMenuRef = element => {\n                  page.menuRef = { current: element };\n                };\n\n                return (\n                  <Fragment key={i}>\n                    {page.href ? (\n                      <TabsItem\n                        elementType={GatsbyLink}\n                        {...getExternalLinkProps(page.href)}\n                        ref={setTabRef}\n                        to={withPrefix(page.href)}\n                        selected={isSelectedTab}\n                      >\n                        <TabsItemLabel>{page.title}</TabsItemLabel>\n                      </TabsItem>\n                    ) : (\n                      <TabsItem\n                        css={css`\n                          ${openMenuIndex === i &&\n                            `\n                          &:after {\n                            content: '';\n                            position: absolute;\n                            z-index: -1;\n                            height: var(--spectrum-global-dimension-size-800);\n                            width: calc(100% + var(--spectrum-global-dimension-size-250));\n                            left: calc(-1 * var(--spectrum-global-dimension-size-125));\n                            top: calc(-1 * var(--spectrum-global-dimension-size-100));\n                            background-color: var(--spectrum-global-color-gray-100);\n                          }\n                        `}\n                        `}\n                        ref={setTabRef}\n                        selected={isSelectedTab}\n                        aria-controls={menuPopoverId}\n                        onClick={event => {\n                          event.stopImmediatePropagation();\n\n                          setOpenVersion(false);\n                          setOpenProfile(false);\n                          setOpenMenuIndex(openMenuIndex === i ? -1 : i);\n                        }}\n                      >\n                        <TabsItemLabel>{page.title}</TabsItemLabel>\n                        <ChevronDown\n                          css={css`\n                            width: var(\n                              --spectrum-global-dimension-size-125\n                            ) !important;\n                            height: var(\n                              --spectrum-global-dimension-size-125\n                            ) !important;\n                            margin-left: var(\n                              --spectrum-global-dimension-size-100\n                            );\n                            transition: transform\n                              var(--spectrum-global-animation-duration-100)\n                              ease-in-out;\n                            ${openMenuIndex === i &&\n                              `transform: rotate(-90deg);`}\n                          `}\n                        />\n                        <Popover\n                          ref={setTabMenuRef}\n                          id={menuPopoverId}\n                          css={css`\n                            margin-left: calc(-1 * var(--spectrum-global-dimension-size-65));\n                            margin-top: var(--spectrum-global-dimension-size-25);\n                            border-top-left-radius: 0;\n                            border-top-right-radius: 0;\n                            ${page.menu.some(menu => menu.description) &&\n                              `width: var(--spectrum-global-dimension-size-2400);`}\n\n                            @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                              margin-top: calc(-1 * var(--spectrum-global-dimension-size-40));\n                            }\n                          `}\n                          isOpen={openMenuIndex === i}\n                        >\n                          <Menu>\n                            {page.menu.map((menu, k) => (\n                              <MenuItem key={k} href={withPrefix(menu.href)}>\n                                {menu.description ? (\n                                  <div\n                                    css={css`\n                                      margin: var(\n                                          --spectrum-global-dimension-size-100\n                                        )\n                                        0;\n                                    `}\n                                  >\n                                    <div\n                                      css={css`\n                                        color: var(\n                                          --spectrum-global-color-gray-900\n                                        );\n                                      `}\n                                    >\n                                      {menu.title}\n                                    </div>\n                                    <div\n                                      className=\"spectrum-Body spectrum-Body--sizeXS\"\n                                      css={css`\n                                        white-space: normal;\n                                        margin-top: var(\n                                          --spectrum-global-dimension-size-50\n                                        );\n                                      `}\n                                    >\n                                      {menu.description}\n                                    </div>\n                                  </div>\n                                ) : (\n                                  <span>{menu.title}</span>\n                                )}\n                              </MenuItem>\n                            ))}\n                          </Menu>\n                        </Popover>\n                      </TabsItem>\n                    )}\n                    {i === 0 && versions?.length > 0 && (\n                      <div\n                        css={css`\n                          margin-left: var(\n                            --spectrum-global-dimension-size-100\n                          ) !important;\n                          margin-right: var(\n                            --spectrum-global-dimension-size-300\n                          );\n                        `}\n                      >\n                        <PickerButton\n                          isQuiet\n                          isOpen={openVersion}\n                          aria-controls={versionPopoverId}\n                          onClick={event => {\n                            event.stopImmediatePropagation();\n\n                            setOpenMenuIndex(-1);\n                            setOpenProfile(false);\n                            setOpenVersion(open => !open);\n                          }}\n                        >\n                          {versions.find(({ selected }) => selected)?.title}\n                        </PickerButton>\n                        <Popover\n                          ref={versionPopoverRef}\n                          id={versionPopoverId}\n                          variant=\"picker\"\n                          isQuiet\n                          isOpen={openVersion}\n                        >\n                          <Menu>\n                            {versions.map((version, k) => (\n                              <MenuItem\n                                key={k}\n                                isSelected={version.selected}\n                                isHighlighted={version.selected}\n                                onClick={() => {\n                                  setOpenVersion(false);\n                                }}\n                                href={version.href}\n                              >\n                                {version.title}\n                              </MenuItem>\n                            ))}\n                          </Menu>\n                        </Popover>\n                      </div>\n                    )}\n                  </Fragment>\n                );\n              })}\n              <TabsIndicator\n                ref={selectedTabIndicatorRef}\n                css={css`\n                  bottom: calc(\n                    -1 * var(--spectrum-global-dimension-size-125)\n                  ) !important;\n\n                  @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                    bottom: calc(\n                      var(--spectrum-global-dimension-size-400) -\n                        var(--spectrum-global-dimension-size-125)\n                    ) !important;\n                  }\n\n                  @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                    bottom: calc(\n                      -1 * var(--spectrum-tabs-rule-size)\n                    ) !important;\n                  }\n                `}\n              />\n              {docs && (\n                <div\n                  css={css`\n                    margin-left: var(--spectrum-global-dimension-size-400);\n                    white-space: nowrap;\n                  `}\n                >\n                  <AnchorButton variant=\"primary\" href={withPrefix(docs.href)}>\n                    {docs.title ?? \"View Docs\"}\n                  </AnchorButton>\n                </div>\n              )}\n            </Tabs>\n          </div>\n          <div\n            css={css`\n              grid-area: optional;\n              justify-self: flex-end;\n            `}\n          >\n            <div\n              css={css`\n                display: flex;\n              `}\n            >\n              {process.env.GATSBY_IMS_SRC && process.env.GATSBY_IMS_CONFIG && (\n                <div\n                  css={css`\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                    margin-left: var(--spectrum-global-dimension-size-200);\n                    width: var(--spectrum-global-dimension-size-800);\n                  `}\n                >\n                  <ProgressCircle size=\"S\" hidden={!isLoadingIms} />\n\n                  <ActionButton\n                    css={css`\n                      margin-top: calc(\n                        -1 * var(--spectrum-global-dimension-size-25)\n                      );\n                    `}\n                    hidden={isLoadingIms || isLoadingProfile || profile}\n                    variant=\"primary\"\n                    isQuiet\n                    onClick={() => {\n                      ims.signIn();\n                    }}\n                  >\n                    <ActionButtonLabel>Sign in</ActionButtonLabel>\n                  </ActionButton>\n\n                  <div hidden={!profile}>\n                    <button\n                      aria-label=\"Profile\"\n                      aria-controls={profilePopoverId}\n                      onClick={event => {\n                        event.stopImmediatePropagation();\n\n                        setOpenVersion(false);\n                        setOpenMenuIndex(-1);\n                        setOpenProfile(open => !open);\n                      }}\n                      css={css`\n                        display: block;\n                        padding: 0;\n                        border: none;\n                        width: var(--spectrum-global-dimension-size-400);\n                        height: var(--spectrum-global-dimension-size-400);\n                        border-radius: var(\n                          --spectrum-global-dimension-static-percent-50\n                        );\n                        background: var(--spectrum-global-color-gray-50);\n                        overflow: hidden;\n                        cursor: pointer;\n                      `}\n                    >\n                      <Image alt=\"Avatar\" src={avatar} />\n                    </button>\n                    <Popover\n                      id={profilePopoverId}\n                      ref={profilePopoverRef}\n                      isOpen={openProfile}\n                      css={css`\n                        width: var(--spectrum-global-dimension-size-3400);\n                        max-height: var(--spectrum-global-dimension-size-4600);\n                        margin-left: calc(\n                          -1 * var(--spectrum-global-dimension-size-3000)\n                        );\n                      `}\n                    >\n                      <div\n                        css={css`\n                          display: flex;\n                          align-items: center;\n                          justify-content: center;\n                          flex-direction: column;\n                        `}\n                      >\n                        <div\n                          css={css`\n                            width: var(--spectrum-global-dimension-size-800);\n                            height: var(--spectrum-global-dimension-size-800);\n                            border-radius: var(\n                              --spectrum-global-dimension-static-percent-50\n                            );\n                            background: var(--spectrum-global-color-gray-50);\n                            overflow: hidden;\n                            margin-top: var(\n                              --spectrum-global-dimension-size-400\n                            );\n                            margin-bottom: var(\n                              --spectrum-global-dimension-size-200\n                            );\n                          `}\n                        >\n                          <Image alt=\"Avatar\" src={avatar} />\n                        </div>\n\n                        <div\n                          className=\"spectrum-Heading spectrum-Heading--sizeL spectrum-Heading--light\"\n                          css={css`\n                            padding: 0 var(--spectrum-global-dimension-size-200);\n                            text-align: center;\n                          `}\n                        >\n                          {profile && profile.displayName}\n                        </div>\n\n                        <div\n                          css={css`\n                            margin: var(--spectrum-global-dimension-size-200) 0;\n                            padding: 0 var(--spectrum-global-dimension-size-200);\n                            box-sizing: border-box;\n                            width: 100%;\n                          `}\n                        >\n                          <Divider size=\"S\" />\n                        </div>\n\n                        <AnchorButton\n                          href=\"https://account.adobe.com/\"\n                          variant=\"primary\"\n                          isQuiet\n                        >\n                          Edit Profile\n                        </AnchorButton>\n\n                        <Button\n                          variant=\"primary\"\n                          css={css`\n                            margin: var(--spectrum-global-dimension-size-200) 0;\n                          `}\n                          onClick={() => {\n                            ims.signOut();\n                          }}\n                        >\n                          Sign out\n                        </Button>\n                      </div>\n                    </Popover>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </nav>\n    </header>\n  );\n};\n\nGlobalHeader.propTypes = {\n  ims: PropTypes.object,\n  isLoadingIms: PropTypes.bool,\n  home: PropTypes.object,\n  versions: PropTypes.array,\n  pages: PropTypes.array,\n  docs: PropTypes.object,\n  location: PropTypes.object,\n  toggleSideNav: PropTypes.func,\n  hasSideNav: PropTypes.bool\n};\n\nexport { GlobalHeader };\n"],"sourceRoot":""}