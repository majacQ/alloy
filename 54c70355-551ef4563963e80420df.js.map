{"version":3,"sources":["webpack://alloy-sandbox/./src/components/Layout/index.js"],"names":["SideNav","pageSrc","openAPI","src","block","frontMatter","frame","toggleSideNav","setShowSideNav","showSideNav","updatePageSrc","type","setIsLoading","page","has","loadable","load","then","children","pageContext","location","otherProps","console","log","data","useStaticQuery","allMdx","allSitePage","site","ParliamentSearchIndex","siteMetadata","pathPrefix","home","versions","pages","subPages","docs","useState","isLoading","pathname","trailingSlashFix","decodeURIComponent","forEach","normalizePagePath","menu","version","normalizeSubPages","subPage","pathWithRootFix","rootFix","pagesWithRootFix","rootFixPages","sideNavSelectedPages","findSelectedPages","sideNavSelectedSubPages","findSubPages","hasSideNav","length","frontmatter","layoutId","nextId","sideNavId","title","description","name","content","includeCsp","includeBasecode","styles","value","dir","className","color-scheme","css","id","SIDENAV_WIDTH","DESKTOP_SCREEN_WIDTH","MOBILE_SCREEN_WIDTH","hidden","selectedPages","selectedSubPages","searchIndex","createElement","height","frameHeight","size","onClick"],"mappings":"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","file":"54c70355-551ef4563963e80420df.js","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport React, { useState, useEffect, createElement } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { Global, css } from \"@emotion/react\";\nimport loadable from \"@loadable/component\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport {\n  rootFix,\n  rootFixPages,\n  findSelectedPages,\n  findSubPages,\n  trailingSlashFix,\n  normalizePagePath,\n  DESKTOP_SCREEN_WIDTH,\n  MOBILE_SCREEN_WIDTH,\n  SIDENAV_WIDTH\n} from \"../../utils\";\nimport \"@spectrum-css/vars/dist/spectrum-global.css\";\nimport \"@spectrum-css/vars/dist/spectrum-medium.css\";\nimport \"@spectrum-css/vars/dist/spectrum-large.css\";\nimport \"@spectrum-css/vars/dist/spectrum-light.css\";\nimport \"@spectrum-css/vars/dist/spectrum-dark.css\";\nimport \"@spectrum-css/vars/dist/spectrum-lightest.css\";\nimport \"@spectrum-css/vars/dist/spectrum-darkest.css\";\nimport \"@spectrum-css/sidenav\";\nimport \"@adobe/focus-ring-polyfill\";\nimport { Provider } from \"../Context\";\nimport { GlobalHeader } from \"../GlobalHeader\";\nimport { ContentSecurityPolicy } from \"../ContentSecurityPolicy\";\nimport { Basecode } from \"../Basecode\";\nimport { ProgressCircle } from \"../ProgressCircle\";\nimport nextId from \"react-id-generator\";\n\n// Page source can come from OpenAPI or Iframe\nconst pageSrc = {\n  openAPI: {\n    src: null,\n    block: null,\n    frontMatter: \"openAPISpec\"\n  },\n  frame: {\n    src: null,\n    block: null,\n    frontMatter: \"frameSrc\"\n  }\n};\n\nlet SideNav;\n\nconst toggleSideNav = setShowSideNav => {\n  setShowSideNav(showSideNav => !showSideNav);\n};\n\nconst addScript = url =>\n  new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n    script.onload = val => resolve(val);\n    script.onerror = err => reject(err);\n    script.onabort = err => reject(err);\n\n    document.head.appendChild(script);\n  });\n\nconst updatePageSrc = (type, frontMatter, setIsLoading) => {\n  const page = pageSrc[type];\n\n  page.has = frontMatter?.[page.frontMatter];\n  if (typeof page.has !== \"undefined\" && page.src !== page.has) {\n    page.src = page.has;\n  }\n\n  if (page.src && !page.block) {\n    setIsLoading(true);\n    // Import statements have to be hardcoded\n    if (type === \"openAPI\") {\n      page.block = loadable(() => import(\"../OpenAPIBlock\"));\n    } else if (type === \"frame\") {\n      page.block = loadable(() => import(\"../Frame\"));\n    }\n\n    page.block.load().then(() => {\n      setIsLoading(false);\n    });\n  }\n};\n\nexport default ({ children, pageContext, location, ...otherProps }) => {\n  console.log(pageContext, location, otherProps);\n  // const [ims, setIms] = useState(null);\n  // const [isLoadingIms, setIsLoadingIms] = useState(true);\n  \n    // Load and initialize IMS\n  // useEffect(() => {\n  //   const IMS_SRC = process.env.GATSBY_IMS_SRC;\n  //   const IMS_CONFIG = process.env.GATSBY_IMS_CONFIG;\n\n  //   if (IMS_SRC && IMS_CONFIG) {\n  //     (async () => {\n  //       try {\n  //         await addScript(`${IMS_SRC}`);\n  //         let IMS_CONFIG_JSON = JSON.parse(IMS_CONFIG);\n  //         IMS_CONFIG_JSON.onReady = () => {\n  //           setIms(window.adobeIMS);\n  //         };\n  //         window.adobeImsFactory.createIMSLib(IMS_CONFIG_JSON);\n  //         window.adobeIMS.initialize();\n  //       } catch (e) {\n  //         console.error(`AIO: IMS error.`);\n  //       } finally {\n  //         setIsLoadingIms(false);\n  //       }\n  //     })();\n  //   } else {\n  //     console.warn(\"AIO: IMS config missing.\");\n  //     setIsLoadingIms(false);\n  //   }\n  // }, []);\n\n  // Load all data once and pass it to the Provider\n  const data = useStaticQuery(\n    graphql`\n      query {\n        allMdx {\n          nodes {\n            tableOfContents\n            fileAbsolutePath\n          }\n        }\n        allSitePage {\n          nodes {\n            component\n            path\n          }\n        }\n        site {\n          pathPrefix\n          siteMetadata {\n            home {\n              title\n              path\n              hidden\n            }\n            docs {\n              title\n              path\n            }\n            versions {\n              title\n              path\n              selected\n            }\n            pages {\n              title\n              path\n              menu {\n                title\n                description\n                path\n              }\n            }\n            subPages {\n              title\n              path\n              header\n              pages {\n                title\n                path\n                pages {\n                  title\n                  path\n                  pages {\n                    title\n                    path\n                    pages {\n                      title\n                      path\n                      pages {\n                        title\n                        path\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n        ParliamentSearchIndex\n      }\n    `\n  );\n\n  const { allMdx, allSitePage, site, ParliamentSearchIndex } = data;\n  const { siteMetadata, pathPrefix } = site;\n  const { home, versions, pages, subPages, docs } = siteMetadata;\n\n  const [showSideNav, setShowSideNav] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Unify all paths\n  location.pathname = trailingSlashFix(decodeURIComponent(location.pathname));\n\n  pages.forEach(page => {\n    normalizePagePath(page);\n\n    if (page.menu) {\n      page.menu.forEach(menu => {\n        normalizePagePath(menu);\n      });\n    }\n  });\n\n  if (versions) {\n    versions.forEach(version => {\n      normalizePagePath(version);\n    });\n  }\n\n  normalizePagePath(home);\n  normalizePagePath(docs);\n\n  const normalizeSubPages = page => {\n    normalizePagePath(page);\n\n    if (page.pages) {\n      page.pages.forEach(subPage => {\n        normalizeSubPages(subPage);\n      });\n    }\n  };\n\n  if (subPages) {\n    subPages.forEach(subPage => {\n      normalizeSubPages(subPage);\n    });\n  }\n\n  const pathWithRootFix = rootFix(location.pathname);\n  const pagesWithRootFix = rootFixPages(pages);\n  const sideNavSelectedPages = findSelectedPages(pathWithRootFix, subPages);\n  const sideNavSelectedSubPages = findSubPages(\n    pathWithRootFix,\n    pagesWithRootFix,\n    subPages\n  );\n  const hasSideNav = sideNavSelectedSubPages.length > 0;\n\n  if (hasSideNav && !SideNav) {\n    SideNav = loadable(() => import(\"../SideNav\"));\n  }\n\n  const frontMatter = pageContext?.frontmatter;\n\n  const layoutId = nextId();\n  const sideNavId = nextId();\n\n  // Update OpenAPI spec and Frame src\n  updatePageSrc(\"openAPI\", frontMatter, setIsLoading);\n  updatePageSrc(\"frame\", frontMatter, setIsLoading);\n\n  return (\n    <>\n      <Helmet>\n        {frontMatter.title && <title>{frontMatter.title}</title>}\n        {frontMatter.description && <meta name=\"description\" content={frontMatter.description} />}\n        <meta\n          name=\"viewport\"\n          content=\"width=device-width,minimum-scale=1,initial-scale=1\"\n        />\n        { pageContext.frontmatter.includeCsp !== false && <ContentSecurityPolicy /> }\n\n        { pageContext.frontmatter.includeBasecode !== false && <Basecode /> }\n        <noscript>{`\n          <style>\n            #${layoutId} {\n              grid-template-columns: 0 auto;\n            }\n            \n            #${sideNavId} {\n              display: none !important;\n            }\n            \n            .gatsby-resp-image-image {\n              opacity: 1 !important;\n            }\n          </style>\n        `}</noscript>\n      </Helmet>\n      \n      <Global\n        styles={css`\n          @font-face {\n            font-family: \"adobe-clean\";\n            src: url(\"https://use.typekit.net/af/cb695f/000000000000000000017701/27/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n4&v=3\")\n                format(\"woff2\"),\n              url(\"https://use.typekit.net/af/cb695f/000000000000000000017701/27/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n4&v=3\")\n                format(\"woff\"),\n              url(\"https://use.typekit.net/af/cb695f/000000000000000000017701/27/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n4&v=3\")\n                format(\"opentype\");\n            font-display: swap;\n            font-style: normal;\n            font-weight: 400;\n          }\n\n          @font-face {\n            font-family: \"adobe-clean\";\n            src: url(\"https://use.typekit.net/af/74ffb1/000000000000000000017702/27/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i4&v=3\")\n                format(\"woff2\"),\n              url(\"https://use.typekit.net/af/74ffb1/000000000000000000017702/27/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i4&v=3\")\n                format(\"woff\"),\n              url(\"https://use.typekit.net/af/74ffb1/000000000000000000017702/27/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i4&v=3\")\n                format(\"opentype\");\n            font-display: swap;\n            font-style: italic;\n            font-weight: 400;\n          }\n\n          @font-face {\n            font-family: \"adobe-clean\";\n            src: url(\"https://use.typekit.net/af/eaf09c/000000000000000000017703/27/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n7&v=3\")\n                format(\"woff2\"),\n              url(\"https://use.typekit.net/af/eaf09c/000000000000000000017703/27/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n7&v=3\")\n                format(\"woff\"),\n              url(\"https://use.typekit.net/af/eaf09c/000000000000000000017703/27/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n7&v=3\")\n                format(\"opentype\");\n            font-display: swap;\n            font-style: normal;\n            font-weight: 700;\n          }\n\n          @font-face {\n            font-family: \"adobe-clean\";\n            src: url(\"https://use.typekit.net/af/40207f/0000000000000000000176ff/27/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n3&v=3\")\n                format(\"woff2\"),\n              url(\"https://use.typekit.net/af/40207f/0000000000000000000176ff/27/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n3&v=3\")\n                format(\"woff\"),\n              url(\"https://use.typekit.net/af/40207f/0000000000000000000176ff/27/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n3&v=3\")\n                format(\"opentype\");\n            font-display: swap;\n            font-style: normal;\n            font-weight: 300;\n          }\n\n          @font-face {\n            font-family: \"adobe-clean-serif\";\n            src: url(\"https://use.typekit.net/af/505d17/00000000000000003b9aee44/27/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n9&v=3\")\n                format(\"woff2\"),\n              url(\"https://use.typekit.net/af/505d17/00000000000000003b9aee44/27/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n9&v=3\")\n                format(\"woff\"),\n              url(\"https://use.typekit.net/af/505d17/00000000000000003b9aee44/27/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n9&v=3\")\n                format(\"opentype\");\n            font-display: swap;\n            font-style: normal;\n            font-weight: 900;\n          }\n\n          html,\n          body {\n            margin: 0;\n            text-size-adjust: none;\n            overscroll-behavior: auto contain;\n            -webkit-font-smoothing: antialiased;\n            -moz-osx-font-smoothing: grayscale;\n          }\n\n          *[hidden] {\n            display: none !important;\n          }\n        `}\n      />\n      <Provider\n        value={{\n          location,\n          pageContext,\n          hasSideNav,\n          siteMetadata,\n          pathPrefix,\n          allSitePage,\n          allMdx\n        }}\n      >\n\n        <div\n          dir=\"ltr\"\n          className=\"spectrum spectrum--medium spectrum--large spectrum--light\"\n          color-scheme=\"light\"\n          css={css`\n            min-height: 100vh;\n            background-color: var(--spectrum-global-color-gray-50);\n          `}\n        >\n          <>\n            <div\n              id={layoutId}\n              css={css`\n                display: grid;\n                grid-template-areas: \"header header\" \"sidenav main\";\n                grid-template-rows: var(--spectrum-global-dimension-size-800);\n                grid-template-columns: ${hasSideNav\n                  ? `${SIDENAV_WIDTH} auto`\n                  : \"0 auto\"};\n\n                @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                  grid-template-columns: 0px auto;\n                }\n\n                @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                  grid-template-rows: var(\n                    --spectrum-global-dimension-size-1200\n                  );\n                }\n              `}\n            >\n              <div\n                css={css`\n                  grid-area: header;\n                  position: fixed;\n                  height: var(--spectrum-global-dimension-size-800);\n                  left: 0;\n                  right: 0;\n                  background-color: var(--spectrum-global-color-gray-50);\n                  z-index: 2;\n\n                  @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                    height: var(--spectrum-global-dimension-size-600);\n                  }\n                `}\n              >\n                <GlobalHeader\n                  home={home}\n                  versions={versions}\n                  pages={pages}\n                  docs={docs}\n                  location={location}\n                  hasSideNav={hasSideNav}\n                  toggleSideNav={() => {\n                    toggleSideNav(setShowSideNav);\n                  }}\n                />\n              </div>\n              <div\n                id={sideNavId}\n                hidden={!hasSideNav}\n                css={css`\n                  grid-area: sidenav;\n                  position: fixed;\n                  z-index: 1;\n                  width: ${SIDENAV_WIDTH};\n                  height: 100%;\n                  background-color: var(--spectrum-global-color-gray-75);\n\n                  @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                    transition: transform\n                      var(--spectrum-global-animation-duration-200) ease-in-out;\n                    transform: translateX(${showSideNav ? \"0\" : \"-100%\"});\n                  }\n                `}\n              >\n                {SideNav && (\n                  <SideNav\n                    selectedPages={sideNavSelectedPages}\n                    selectedSubPages={sideNavSelectedSubPages}\n                    searchIndex={ParliamentSearchIndex}\n                    setShowSideNav={setShowSideNav}\n                  />\n                )}\n              </div>\n              <div\n                css={css`\n                  grid-area: main;\n                `}\n              >\n                <main hidden={!pageSrc[\"openAPI\"].has}>\n                  {pageSrc[\"openAPI\"].src &&\n                    pageSrc[\"openAPI\"].block &&\n                    createElement(pageSrc[\"openAPI\"].block, {\n                      src: pageSrc[\"openAPI\"].src\n                    })}\n                </main>\n\n                <main hidden={!pageSrc[\"frame\"].has}>\n                  {pageSrc[\"frame\"].src &&\n                    pageSrc[\"frame\"].block &&\n                    createElement(pageSrc[\"frame\"].block, {\n                      src: pageSrc[\"frame\"].src,\n                      height: frontMatter?.frameHeight,\n                      location\n                    })}\n                </main>\n\n                {!pageSrc[\"openAPI\"].has && !pageSrc[\"frame\"].has && children}\n              </div>\n            </div>\n\n            <div\n              css={css`\n                position: fixed;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                display: ${isLoading ? \"grid\" : \"none\"};\n                place-items: center center;\n              `}\n            >\n              <ProgressCircle size=\"L\" />\n            </div>\n\n            <div\n              css={css`\n                display: none;\n\n                @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                  display: block;\n                  transition: opacity 160ms ease-in;\n                  background-color: rgba(0, 0, 0, 0.4);\n                  pointer-events: none;\n                  opacity: 0;\n                  position: fixed;\n                  top: 0;\n                  left: 0;\n                  height: 100%;\n                  width: 100%;\n\n                  ${showSideNav &&\n                    `\n                    pointer-events: auto;\n                    opacity: 1;\n                  `}\n                }\n              `}\n              onClick={() => {\n                toggleSideNav(setShowSideNav);\n              }}\n            />\n          </>\n        </div>\n      </Provider>\n    </>\n  );\n};\n"],"sourceRoot":""}